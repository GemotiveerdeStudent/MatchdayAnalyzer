// <auto-generated />
using System;
using MatchdayAnalyzer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatchdayAnalyzer.Migrations
{
    [DbContext(typeof(MatchAnalyzerContext))]
    [Migration("20230921190024_MatchdayAnalyzer")]
    partial class MatchdayAnalyzer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttendancePlayer", b =>
                {
                    b.Property<int>("AttendancesId")
                        .HasColumnType("int");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.HasKey("AttendancesId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("AttendancePlayer");
                });

            modelBuilder.Entity("GameGoal", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("GoalListId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "GoalListId");

                    b.HasIndex("GoalListId");

                    b.ToTable("GameGoal");
                });

            modelBuilder.Entity("GameTeam", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsListId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "TeamsListId");

                    b.HasIndex("TeamsListId");

                    b.ToTable("GameTeam");
                });

            modelBuilder.Entity("GoalPlayer", b =>
                {
                    b.Property<int>("GoalsId")
                        .HasColumnType("int");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.HasKey("GoalsId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("GoalPlayer");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AwayTeamScore")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HomeTeamScore")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("OpponentTeam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("MatchGoals")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("TotalGoals")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SeasonsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeasonsId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("AttendancePlayer", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Attendance", null)
                        .WithMany()
                        .HasForeignKey("AttendancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameGoal", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Goal", null)
                        .WithMany()
                        .HasForeignKey("GoalListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameTeam", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoalPlayer", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Goal", null)
                        .WithMany()
                        .HasForeignKey("GoalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Attendance", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Game", "Game")
                        .WithMany("Attendances")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Player", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Team", b =>
                {
                    b.HasOne("MatchdayAnalyzer.Models.ClassModels.Season", "Seasons")
                        .WithMany("Teams")
                        .HasForeignKey("SeasonsId");

                    b.Navigation("Seasons");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Game", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Season", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("MatchdayAnalyzer.Models.ClassModels.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
